version: '3.8'

services:
  fastapi_server:
    container_name: fastapi_server
    build: ./backend
    restart: always
    command: "sh -c 'alembic upgrade head && uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000'"
    volumes:
      - ./backend:/code
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file: ".env"
    depends_on:
      - database
    links:
      - traefik-proxy:storage.localhost
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi_local.entrypoints=web"
      - "traefik.http.routers.fastapi_local.rule=Host(`fastapi.${LOCAL_1}`, `fastapi.${LOCAL_2}`)"
      - "traefik.http.routers.fastapi_local_base.entrypoints=web"
      - "traefik.http.routers.fastapi_local_base.rule=Host(`${LOCAL_1}`, `${LOCAL_2}`)"
      - "traefik.http.services.fastapi_localservice.loadbalancer.server.port=8000"

  traefik-proxy:
    container_name: traefik-proxy
    restart: always
    image: "traefik:latest"
    command:
      - "--providers.docker=true"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./traefik/traefik.yaml:/traefik.yaml:ro
      - ./traefik/.htpasswd:/.htpasswd
      - "${EB_LOG_BASE_DIR:-./traefik}/logs:/logs"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${LOCAL_1}`, `traefik.${LOCAL_2}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.auth.basicauth.usersfile=/.htpasswd"
    env_file: ".env"
  
  database:
    image: postgres:latest
    container_name: database
    env_file: ".env"
    user: root
    ports:
      -  "5432:5432" # Remove this on production
    expose:
      - 5432
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_SERVER}
      - POSTGRES_HOST_AUTH_METHOD= "trust"
      - POSTGRESQL_POSTGRES_PASSWORD= ${POSTGRES_PASSWORD}

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file: ".env"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - database