version: '3.8'


services:
  fastapi_server:
    container_name: fastapi_server
    build: ./backend
    restart: always
    command: "sh -c 'alembic upgrade head && uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000'"
    volumes:
      - ./backend:/code
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file: ".env"
    depends_on:
      - database
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.fastapi_server.rule=Host(`${EXT_ENDPOINT1}`, `${LOCAL_1}`)'
      - 'traefik.http.routers.fastapi_server.tls.certresolver=myresolver'
      - "traefik.http.routers.fastapi_server.entrypoints=websecure"


  database:
    image: postgres:latest
    container_name: database
    env_file: ".env"
    user: root
    ports:
      -  "5432:5432" # Remove this on production
    expose:
      - 5432
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_SERVER}
      - POSTGRES_HOST_AUTH_METHOD= "trust"
      - POSTGRESQL_POSTGRES_PASSWORD= ${POSTGRES_PASSWORD}


  traefik:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=nikiforov.kira@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/traefik/acme.json"
    ports:
      - '443:443'
      - '8080:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - "./traefik:/traefik"
    env_file: ".env"


  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file: ".env"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - database


  minio_server:
    image: minio/minio:latest
    container_name: minio_server
    command: server --console-address ":9001" /data/
    restart: always
    volumes:
      - ./minio/data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
        MINIO_ROOT_USER: ${MINIO_ROOT_USER}
        MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}


networks:
  traefik:
    external: true